[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Plasma Deck
[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'ease_colour(G.C.UI_CHIPS, {0.8, 0.45, 0.85, 1})'
position = "at"
payload = 'ease_colour(G.C.UI_CHIPS, G.C.PLASMA or {0.8, 0.45, 0.85, 1})'
match_indent = true

[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'ease_colour(G.C.UI_MULT, {0.8, 0.45, 0.85, 1})'
position = "at"
payload = 'ease_colour(G.C.UI_MULT, G.C.PLASMA or {0.8, 0.45, 0.85, 1})'
match_indent = true

[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'ease_colour(G.C.UI_CHIPS, G.C.BLUE, 2)'
position = "at"
payload = 'ease_colour(G.C.UI_CHIPS, G.C.CHIPS, 2)'
match_indent = true

[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'ease_colour(G.C.UI_MULT, G.C.RED, 2)'
position = "at"
payload = 'ease_colour(G.C.UI_MULT, G.C.MULT, 2)'
match_indent = true

[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'G.C.UI_CHIPS[1], G.C.UI_CHIPS[2], G.C.UI_CHIPS[3], G.C.UI_CHIPS[4] = G.C.BLUE[1], G.C.BLUE[2], G.C.BLUE[3], G.C.BLUE[4]'
position = "at"
payload = 'G.C.UI_CHIPS = copy_table(G.C.CHIPS)'
match_indent = true

[[patches]]
[patches.pattern]
target = "back.lua"
pattern = 'G.C.UI_MULT[1], G.C.UI_MULT[2], G.C.UI_MULT[3], G.C.UI_MULT[4] = G.C.RED[1], G.C.RED[2], G.C.RED[3], G.C.RED[4]'
position = "at"
payload = 'G.C.UI_MULT = copy_table(G.C.MULT)'
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'G.C.UI_CHIPS[1], G.C.UI_CHIPS[2], G.C.UI_CHIPS[3], G.C.UI_CHIPS[4] = G.C.BLUE[1], G.C.BLUE[2], G.C.BLUE[3], G.C.BLUE[4]'
position = "at"
payload = 'G.C.UI_CHIPS = copy_table(G.C.CHIPS)'
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'G.C.UI_MULT[1], G.C.UI_MULT[2], G.C.UI_MULT[3], G.C.UI_MULT[4] = G.C.RED[1], G.C.RED[2], G.C.RED[3], G.C.RED[4]'
position = "at"
payload = 'G.C.UI_MULT = copy_table(G.C.MULT)'
match_indent = true

# Enhancement Blocking

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'if self.params.discover and not center.discovered then'
position = "before"
payload = '''
if self.config then
    if self.config.block_enhance then return false end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'if G.STATE ~= G.STATES.HAND_PLAYED and G.STATE ~= G.STATES.DRAW_TO_HAND and G.STATE ~= G.STATES.PLAY_TAROT or any_state then'
position = "before"
payload = """
if self.ability.effect == 'Enhance' then
        for k,v in pairs(G.hand.highlighted) do
                if v.ability.block_enhance then return false end
        end
end
"""
match_indent = true

[[patches]]
[patches.pattern]
target = "engine/moveable.lua"
pattern = 'local amount = amount or 0.4'
position = "after"
payload = "amount = amount * self.T.scale"
match_indent = true

[[patches]]
[patches.pattern]
target = "engine/moveable.lua"
pattern = 'self.VT.scale = 1-0.6*amount'
position = "at"
payload = "self.VT.scale = (1-0.6*amount) * self.T.scale"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = """
        elseif card.jimbo  then
        y_off = -0.05*G.CARD_H
        card_aligned = 'tm'
"""
position = "after"
payload = '''
else
        y_off = 0.15*G.CARD_H*card.T.scale
        card_aligned = 'tm'
'''
match_indent = true

